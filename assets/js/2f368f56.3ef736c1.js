"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[5671],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return g}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(a),g=n,f=u["".concat(p,".").concat(g)]||u[g]||d[g]||o;return a?r.createElement(f,l(l({ref:t},c),{},{components:a})):r.createElement(f,l({ref:t},c))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2989:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return g},default:function(){return y},frontMatter:function(){return u},metadata:function(){return f},toc:function(){return h}});var r=a(3905),n=Object.defineProperty,o=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,c=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,d=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&c(e,a,t[a]);if(i)for(var a of i(t))s.call(t,a)&&c(e,a,t[a]);return e};const u={id:"dialogs",title:"Dialogs"},g=void 0,f={unversionedId:"dialogs",id:"version-stable/dialogs",title:"Dialogs",description:"Playwright can interact with the web page dialogs such as alert, confirm, prompt as well as beforeunload confirmation.",source:"@site/versioned_docs/version-stable/dialogs.mdx",sourceDirName:".",slug:"/dialogs",permalink:"/docs/dialogs",draft:!1,tags:[],version:"stable",frontMatter:{id:"dialogs",title:"Dialogs"},sidebar:"docs",previous:{title:"Command line tools",permalink:"/docs/cli"},next:{title:"Downloads",permalink:"/docs/downloads"}},m={},h=[{value:"alert(), confirm(), prompt() dialogs",id:"alert-confirm-prompt-dialogs",level:2},{value:"API reference",id:"api-reference",level:3},{value:"beforeunload dialog",id:"beforeunload-dialog",level:2}],b={toc:h};function y(e){var t,a=e,{components:n}=a,c=((e,t)=>{var a={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&i)for(var r of i(e))t.indexOf(r)<0&&s.call(e,r)&&(a[r]=e[r]);return a})(a,["components"]);return(0,r.kt)("wrapper",(t=d(d({},b),c),o(t,l({components:n,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"Playwright can interact with the web page dialogs such as ",(0,r.kt)("a",d({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/alert"}),(0,r.kt)("inlineCode",{parentName:"a"},"alert")),", ",(0,r.kt)("a",d({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm"}),(0,r.kt)("inlineCode",{parentName:"a"},"confirm")),", ",(0,r.kt)("a",d({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt"}),(0,r.kt)("inlineCode",{parentName:"a"},"prompt"))," as well as ",(0,r.kt)("a",d({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event"}),(0,r.kt)("inlineCode",{parentName:"a"},"beforeunload"))," confirmation."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",d({parentName:"li"},{href:"#alert-confirm-prompt-dialogs"}),"alert(), confirm(), prompt() dialogs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",d({parentName:"li"},{href:"#beforeunload-dialog"}),"beforeunload dialog"))),(0,r.kt)("h2",d({},{id:"alert-confirm-prompt-dialogs"}),"alert(), confirm(), prompt() dialogs"),(0,r.kt)("p",null,"By default, dialogs are auto-dismissed by Playwright, so you don't have to handle them. However, you can register a dialog handler before the action that triggers the dialog to accept or decline it."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-js"}),"page.on('dialog', dialog => dialog.accept());\nawait page.locator('button').click();\n")),(0,r.kt)("admonition",d({},{type:"note"}),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",d({parentName:"p"},{href:"/docs/api/class-page#page-event-dialog"}),"page.on('dialog')")," listener ",(0,r.kt)("strong",{parentName:"p"},"must handle")," the dialog. Otherwise your action will stall, be it ",(0,r.kt)("a",d({parentName:"p"},{href:"/docs/api/class-page#page-click"}),"page.click(selector[, options])"),", ",(0,r.kt)("a",d({parentName:"p"},{href:"/docs/api/class-page#page-evaluate"}),"page.evaluate(pageFunction[, arg])")," or any other. That's because dialogs in Web are modal and block further page execution until they are handled.")),(0,r.kt)("p",null,"As a result, following snippet will never resolve:"),(0,r.kt)("admonition",d({},{type:"warning"}),(0,r.kt)("p",{parentName:"admonition"},"WRONG!")),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-js"}),"page.on('dialog', dialog => console.log(dialog.message()));\nawait page.locator('button').click(); // Will hang here\n")),(0,r.kt)("admonition",d({},{type:"note"}),(0,r.kt)("p",{parentName:"admonition"},"If there is no listener for ",(0,r.kt)("a",d({parentName:"p"},{href:"/docs/api/class-page#page-event-dialog"}),"page.on('dialog')"),", all dialogs are automatically dismissed.")),(0,r.kt)("h3",d({},{id:"api-reference"}),"API reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",d({parentName:"li"},{href:"/docs/api/class-dialog",title:"Dialog"}),"Dialog")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",d({parentName:"li"},{href:"/docs/api/class-dialog#dialog-accept"}),"dialog.accept([promptText])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",d({parentName:"li"},{href:"/docs/api/class-dialog#dialog-dismiss"}),"dialog.dismiss()"))),(0,r.kt)("h2",d({},{id:"beforeunload-dialog"}),"beforeunload dialog"),(0,r.kt)("p",null,"When ",(0,r.kt)("a",d({parentName:"p"},{href:"/docs/api/class-page#page-close"}),"page.close([options])")," is invoked with the truthy ",(0,r.kt)("inlineCode",{parentName:"p"},"runBeforeUnload")," value, it page runs its unload handlers. This is the only case when ",(0,r.kt)("a",d({parentName:"p"},{href:"/docs/api/class-page#page-close"}),"page.close([options])")," does not wait for the page to actually close, because it might be that the page stays open in the end of the operation."),(0,r.kt)("p",null,"You can register a dialog handler to handle the beforeunload dialog yourself:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-js"}),"page.on('dialog', async dialog => {\n  assert(dialog.type() === 'beforeunload');\n  await dialog.dismiss();\n});\nawait page.close({ runBeforeUnload: true });\n")))}y.isMDXComponent=!0}}]);