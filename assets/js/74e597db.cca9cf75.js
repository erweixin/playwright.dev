"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[2106],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return a?n.createElement(h,i(i({ref:t},c),{},{components:a})):n.createElement(h,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3811:function(e,t,a){a.d(t,{Z:function(){return p}});var n=a(7294),r=Object.defineProperty,l=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,s=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a;function p({children:e,hidden:t,className:a}){return n.createElement("div",((e,t)=>{for(var a in t||(t={}))i.call(t,a)&&s(e,a,t[a]);if(l)for(var a of l(t))o.call(t,a)&&s(e,a,t[a]);return e})({role:"tabpanel"},{hidden:t,className:a}),e)}},3824:function(e,t,a){a.d(t,{Z:function(){return f}});var n=a(7294),r=a(4939),l=a(9670),i=a(6010),o="tabItem_LplD",s=Object.defineProperty,p=Object.defineProperties,c=Object.getOwnPropertyDescriptors,u=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,h=(e,t,a)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,g=(e,t)=>{for(var a in t||(t={}))d.call(t,a)&&h(e,a,t[a]);if(u)for(var a of u(t))m.call(t,a)&&h(e,a,t[a]);return e};function y(e){var t,a,r;const{lazy:s,block:u,defaultValue:d,values:m,groupId:h,className:y}=e,f=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=null!=m?m:f.map((({props:{value:e,label:t,attributes:a}})=>({value:e,label:t,attributes:a}))),k=(0,l.lx)(b,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const w=null===d?d:null!=(r=null!=d?d:null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)?r:null==(a=f[0])?void 0:a.props.value;if(null!==w&&!b.some((e=>e.value===w)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${w}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:N}=(0,l.UB)(),[x,T]=(0,n.useState)(w),j=[],{blockElementScrollPositionUntilNextRender:P}=(0,l.o5)();if(null!=h){const e=v[h];null!=e&&e!==x&&b.some((t=>t.value===e))&&T(e)}const O=e=>{const t=e.currentTarget,a=j.indexOf(t),n=b[a].value;n!==x&&(P(t),T(n),null!=h&&N(h,n))},C=e=>{let t=null;switch(e.key){case"ArrowRight":{const a=j.indexOf(e.currentTarget)+1;t=j[a]||j[0];break}case"ArrowLeft":{const a=j.indexOf(e.currentTarget)-1;t=j[a]||j[j.length-1];break}}null==t||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},y)},b.map((({value:e,label:t,attributes:a})=>{return n.createElement("li",(r=g({role:"tab",tabIndex:x===e?0:-1,"aria-selected":x===e,key:e,ref:e=>j.push(e),onKeyDown:C,onFocus:O,onClick:O},a),l={className:(0,i.Z)("tabs__item",o,null==a?void 0:a.className,{"tabs__item--active":x===e})},p(r,c(l))),null!=t?t:e);var r,l}))),s?(0,n.cloneElement)(f.filter((e=>e.props.value===x))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},f.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function f(e){const t=(0,r.Z)();return n.createElement(y,g({key:String(t)},e))}},3958:function(e,t,a){a.r(t),a.d(t,{assets:function(){return f},contentTitle:function(){return g},default:function(){return w},frontMatter:function(){return h},metadata:function(){return y},toc:function(){return b}});var n=a(3905),r=a(3824),l=a(3811),i=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,d=(e,t,a)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,m=(e,t)=>{for(var a in t||(t={}))c.call(t,a)&&d(e,a,t[a]);if(p)for(var a of p(t))u.call(t,a)&&d(e,a,t[a]);return e};const h={id:"library",title:"Library"},g=void 0,y={unversionedId:"library",id:"library",title:"Library",description:"Playwright Library provides unified APIs for launching and interacting with browsers, while Playwright Test provides all this plus a fully managed end-to-end Test Runner and experience.",source:"@site/docs/library.mdx",sourceDirName:".",slug:"/library",permalink:"/docs/next/library",tags:[],version:"current",frontMatter:{id:"library",title:"Library"},sidebar:"docs",previous:{title:"Experimental: components",permalink:"/docs/next/test-components"},next:{title:"Accessibility testing",permalink:"/docs/next/accessibility-testing"}},f={},b=[{value:"When Should Playwright Library Be Used Directly?",id:"when-should-playwright-library-be-used-directly",level:2},{value:"Differences",id:"differences",level:2},{value:"Library Example",id:"library-example",level:3},{value:"Test Example",id:"test-example",level:3},{value:"Key Differences",id:"key-differences",level:3},{value:"Usage",id:"usage",level:2},{value:"First script",id:"first-script",level:2},{value:"Record scripts",id:"record-scripts",level:2},{value:"TypeScript support",id:"typescript-support",level:2},{value:"In JavaScript",id:"in-javascript",level:3},{value:"In TypeScript",id:"in-typescript",level:3}],k={toc:b};function w(e){var t,a=e,{components:i}=a,d=((e,t)=>{var a={};for(var n in e)c.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&p)for(var n of p(e))t.indexOf(n)<0&&u.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=m(m({},k),d),o(t,s({components:i,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"Playwright Library provides unified APIs for launching and interacting with browsers, while Playwright Test provides all this plus a fully managed end-to-end Test Runner and experience."),(0,n.kt)("p",null,"Under most circumstances, for end-to-end testing, you'll want to use ",(0,n.kt)("inlineCode",{parentName:"p"},"@playwright/test")," (Playwright Test), and not ",(0,n.kt)("inlineCode",{parentName:"p"},"playwright")," (Playwright Library) directly. To get started with Playwright Test, follow its ",(0,n.kt)("a",m({parentName:"p"},{href:"/docs/next/intro"}),"Getting Started Guide"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"#when-should-playwright-library-be-used-directly"}),"When Should Playwright Library Be Used Directly?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"#differences"}),"Differences")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"#usage"}),"Usage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"#first-script"}),"First script")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"#record-scripts"}),"Record scripts")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"#typescript-support"}),"TypeScript support")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"/docs/next/release-notes"}),"Release notes"))),(0,n.kt)("h2",m({},{id:"when-should-playwright-library-be-used-directly"}),"When Should Playwright Library Be Used Directly?"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"creating an integration for a third party test runner (e.g. the third-party runner plugins listed ",(0,n.kt)("a",m({parentName:"li"},{href:"/docs/next/test-runners"}),"here")," are built on top of Playwright Library)"),(0,n.kt)("li",{parentName:"ul"},"automation and scraping")),(0,n.kt)("h2",m({},{id:"differences"}),"Differences"),(0,n.kt)("h3",m({},{id:"library-example"}),"Library Example"),(0,n.kt)("p",null,"The following is an example of using the Playwright Library directly to launch Chromium, go to a page, and check its title:"),(0,n.kt)(r.Z,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"import playwright, { devices } from 'playwright';\n\n(async () => {\n  // Setup\n  const browser = await playwright.chromium.launch();\n  const context = await browser.newContext(devices['iPhone 11']);\n  const page = await context.newPage();\n\n  // The actual interesting bit\n  await context.route('**.jpg', route => route.abort());\n  await page.goto('https://example.com/');\n\n  assert(await page.title() === 'Example'); // \ud83d\udc4e not a Web First assertion\n\n  // Teardown\n  await context.close();\n  await browser.close();\n})()\n"))),(0,n.kt)(l.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"const playwright = require('playwright');\n\n(async () => {\n  // Setup\n  const browser = await playwright.chromium.launch();\n  const context = await browser.newContext(devices['iPhone 11']);\n  const page = await context.newPage();\n\n  // The actual interesting bit\n  await context.route('**.jpg', route => route.abort());\n  await page.goto('https://example.com/');\n\n  assert(await page.title() === 'Example'); // \ud83d\udc4e not a Web First assertion\n\n  // Teardown\n  await context.close();\n  await browser.close();\n})()\n")))),(0,n.kt)("p",null,"Run via:"),(0,n.kt)(r.Z,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"node ./my-script.ts\n"))),(0,n.kt)(l.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"node ./my-script.js\n")))),(0,n.kt)("h3",m({},{id:"test-example"}),"Test Example"),(0,n.kt)("p",null,"A test to achieve similar behavior, would look like:"),(0,n.kt)(r.Z,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"import { expect, test, devices } from '@playwright/test';\n\ntest.use(devices['iPhone 11']);\n\ntest('should be titled', async ({ page, context }) => {\n  await context.route('**.jpg', route => route.abort());\n  await page.goto('https://example.com/');\n\n  await expect(page).toHaveTitle('Example');\n});\n"))),(0,n.kt)(l.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"const { expect, test, devices } = require('@playwright/test');\n\ntest.use(devices['iPhone 11']);\n\ntest('should be titled', async ({ page, context }) => {\n  await context.route('**.jpg', route => route.abort());\n  await page.goto('https://example.com/');\n\n  await expect(page).toHaveTitle('Example');\n});\n")))),(0,n.kt)("p",null,"Run via:"),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{}),"npx playwright test\n")),(0,n.kt)("h3",m({},{id:"key-differences"}),"Key Differences"),(0,n.kt)("p",null,"The key differences to note are as follows:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:null})),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Library"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Test"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Installation"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"npm install playwright")),(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"npm init playwright@latest")," (note ",(0,n.kt)("inlineCode",{parentName:"td"},"install")," vs. ",(0,n.kt)("inlineCode",{parentName:"td"},"init"),")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"import"),"/",(0,n.kt)("inlineCode",{parentName:"td"},"require")," name"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"playwright")),(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("inlineCode",{parentName:"td"},"@playwright/test"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Initialization"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Explicitly need to: ",(0,n.kt)("ol",null,(0,n.kt)("li",null,"Pick a browser to use (e.g. ",(0,n.kt)("inlineCode",{parentName:"td"},"chromium"),")"),(0,n.kt)("li",null,"Create ",(0,n.kt)("inlineCode",{parentName:"td"},"browser")," (",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/api/class-browsertype#browser-type-launch"}),"browserType.launch([options])"),")"),(0,n.kt)("li",null,"Create a ",(0,n.kt)("inlineCode",{parentName:"td"},"context")," (",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/api/class-browser#browser-new-context"}),"browser.newContext([options])"),"), ",(0,n.kt)("em",null,"and")," pass any context options explcitly (e.g. ",(0,n.kt)("inlineCode",{parentName:"td"},"devices['iPhone 11']")),(0,n.kt)("li",null,"Create a ",(0,n.kt)("inlineCode",{parentName:"td"},"page")," (",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/api/class-browsercontext#browser-context-new-page"}),"browserContext.newPage()"),")"))),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"An isolated ",(0,n.kt)("inlineCode",{parentName:"td"},"page")," and ",(0,n.kt)("inlineCode",{parentName:"td"},"context")," are provided to each test out-of the box (along with any other ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/test-fixtures#built-in-fixtures"}),"built-in fixtures"),"). No explicit creation. If referenced by the test in it's arguments, the Test Runner will create them for the test. (i.e. lazy-initialization)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Assertions"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"No built-in Web-First Assertions"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/test-assertions"}),"Web-First assertions")," like: ",(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/test-assertions#page-assertions-to-have-title"}),"expect(page).toHaveTitle(titleOrRegExp[, options])")),(0,n.kt)("li",null,(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/test-assertions#page-assertions-to-have-screenshot-1"}),"expect(page).toHaveScreenshot(name[, options])")))," which auto-wait and retry for the condition to be met.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Cleanup"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Explicitly need to: ",(0,n.kt)("ol",null,(0,n.kt)("li",null,"Close ",(0,n.kt)("inlineCode",{parentName:"td"},"context"),"  (",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/api/class-browsercontext#browser-context-close"}),"browserContext.close()"),")"),(0,n.kt)("li",null,"Close ",(0,n.kt)("inlineCode",{parentName:"td"},"browser"),"  (",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/api/class-browser#browser-close"}),"browser.close()"),")"))),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"No explicit close of ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/test-fixtures#built-in-fixtures"}),"built-in fixtures"),"; the Test Runner will take care of it.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Running"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"When using the Library, you run the code as a node script (possibly with some compilation first)."),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"When using the Test Runner, you use the ",(0,n.kt)("inlineCode",{parentName:"td"},"npx playwright test")," command. Along with your ",(0,n.kt)("a",m({parentName:"td"},{href:"/docs/next/test-configuration"}),"config"),"), the Test Runner handles any compilation and choosing what to run and how to run it.")))),(0,n.kt)("p",null,"In addition to the above, Playwright Test\u2014as a full-featured Test Runner\u2014includes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"/docs/next/test-configuration"}),"Configuration Matrix and Projects"),": In the above example, in the Playwright Library version, if we wanted to run with a different device or browser, we'd have to modify the script and plumb the information through. With Playwright Test, we can just specify the ",(0,n.kt)("a",m({parentName:"li"},{href:"/docs/next/test-configuration"}),"matrix of configurations")," in one place, and it will create run the one test under each of these configurations. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"/docs/next/test-parallel"}),"Parallelization")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"/docs/next/test-assertions"}),"Web-First Assertions")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"/docs/next/test-reporters"}),"Reporting")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"/docs/next/test-retries"}),"Retries")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"/docs/next/test-configuration#record-test-trace"}),"Easily Enabled Tracing")),(0,n.kt)("li",{parentName:"ul"},"and more\u2026")),(0,n.kt)("h2",m({},{id:"usage"}),"Usage"),(0,n.kt)("p",null,"Use npm or Yarn to install Playwright library in your Node.js project. See ",(0,n.kt)("a",m({parentName:"p"},{href:"/docs/next/troubleshooting#system-requirements"}),"system requirements"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npm i -D playwright\n")),(0,n.kt)("p",null,"This single command downloads the Playwright NPM package and browser binaries for Chromium, Firefox and WebKit. To modify this behavior see ",(0,n.kt)("a",m({parentName:"p"},{href:"/docs/next/browsers#managing-browser-binaries"}),"managing browsers"),"."),(0,n.kt)("p",null,"Once installed, you can ",(0,n.kt)("inlineCode",{parentName:"p"},"require")," Playwright in a Node.js script, and launch any of the 3 browsers (",(0,n.kt)("inlineCode",{parentName:"p"},"chromium"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"firefox")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"webkit"),")."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"const { chromium } = require('playwright');\n\n(async () => {\n  const browser = await chromium.launch();\n  // Create pages, interact with UI elements, assert values\n  await browser.close();\n})();\n")),(0,n.kt)("p",null,"Playwright APIs are asynchronous and return Promise objects. Our code examples use ",(0,n.kt)("a",m({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await"}),"the async/await pattern")," to ease readability. The code is wrapped in an unnamed async arrow function which is invoking itself."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"(async () => { // Start of async arrow function\n  // Function code\n  // ...\n})(); // End of the function and () to invoke itself\n")),(0,n.kt)("h2",m({},{id:"first-script"}),"First script"),(0,n.kt)("p",null,"In our first script, we will navigate to ",(0,n.kt)("inlineCode",{parentName:"p"},"whatsmyuseragent.org")," and take a screenshot in WebKit."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"const { webkit } = require('playwright');\n\n(async () => {\n  const browser = await webkit.launch();\n  const page = await browser.newPage();\n  await page.goto('http://whatsmyuseragent.org/');\n  await page.screenshot({ path: `example.png` });\n  await browser.close();\n})();\n")),(0,n.kt)("p",null,"By default, Playwright runs the browsers in headless mode. To see the browser UI, pass the ",(0,n.kt)("inlineCode",{parentName:"p"},"headless: false")," flag while launching the browser. You can also use ",(0,n.kt)("inlineCode",{parentName:"p"},"slowMo")," to slow down execution. Learn more in the debugging tools ",(0,n.kt)("a",m({parentName:"p"},{href:"/docs/next/debug"}),"section"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"firefox.launch({ headless: false, slowMo: 50 });\n")),(0,n.kt)("h2",m({},{id:"record-scripts"}),"Record scripts"),(0,n.kt)("p",null,(0,n.kt)("a",m({parentName:"p"},{href:"/docs/next/cli"}),"Command line tools")," can be used to record user interactions and generate JavaScript code."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npx playwright codegen wikipedia.org\n")),(0,n.kt)("h2",m({},{id:"typescript-support"}),"TypeScript support"),(0,n.kt)("p",null,"Playwright includes built-in support for TypeScript. Type definitions will be imported automatically. It is recommended to use type-checking to improve the IDE experience."),(0,n.kt)("h3",m({},{id:"in-javascript"}),"In JavaScript"),(0,n.kt)("p",null,"Add the following to the top of your JavaScript file to get type-checking in VS Code or WebStorm."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"//@ts-check\n// ...\n")),(0,n.kt)("p",null,"Alternatively, you can use JSDoc to set types for variables."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"/** @type {import('playwright').Page} */\nlet page;\n")),(0,n.kt)("h3",m({},{id:"in-typescript"}),"In TypeScript"),(0,n.kt)("p",null,"TypeScript support will work out-of-the-box. Types can also be imported explicitly."),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-js"}),"let page: import('playwright').Page;\n")))}w.isMDXComponent=!0}}]);