"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[6598],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return g}});var l=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=l.createContext({}),p=function(e){var t=l.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return l.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},h=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=p(a),g=n,d=h["".concat(i,".").concat(g)]||h[g]||c[g]||r;return a?l.createElement(d,o(o({ref:t},u),{},{components:a})):l.createElement(d,o({ref:t},u))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=h;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<r;p++)o[p]=a[p];return l.createElement.apply(null,o)}return l.createElement.apply(null,a)}h.displayName="MDXCreateElement"},4455:function(e,t,a){a.d(t,{Z:function(){return c}});var l=a(7294),n=a(6010),r="tabItem_Ymn6",o=Object.defineProperty,s=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a;function c({children:e,hidden:t,className:a}){return l.createElement("div",((e,t)=>{for(var a in t||(t={}))i.call(t,a)&&u(e,a,t[a]);if(s)for(var a of s(t))p.call(t,a)&&u(e,a,t[a]);return e})({role:"tabpanel",className:(0,n.Z)(r,a)},{hidden:t}),e)}},5332:function(e,t,a){a.d(t,{Z:function(){return w}});var l=a(7294),n=a(6010),r=a(4939),o=a(2174),s=a(2107),i=a(8757),p="tabList__CuJ",u="tabItem_LNqP",c=Object.defineProperty,h=Object.defineProperties,g=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable,y=(e,t,a)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,k=(e,t)=>{for(var a in t||(t={}))m.call(t,a)&&y(e,a,t[a]);if(d)for(var a of d(t))b.call(t,a)&&y(e,a,t[a]);return e};function f(e){var t,a;const{lazy:r,block:c,defaultValue:d,values:m,groupId:b,className:y}=e,f=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),w=null!=m?m:f.map((({props:{value:e,label:t,attributes:a}})=>({value:e,label:t,attributes:a}))),v=(0,o.l)(w,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===d?d:null!=(a=null!=d?d:null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)?a:f[0].props.value;if(null!==N&&!w.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${w.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:T,setTabGroupChoices:P}=(0,s.U)(),[x,O]=(0,l.useState)(N),I=[],{blockElementScrollPositionUntilNextRender:D}=(0,i.o5)();if(null!=b){const e=T[b];null!=e&&e!==x&&w.some((t=>t.value===e))&&O(e)}const C=e=>{const t=e.currentTarget,a=I.indexOf(t),l=w[a].value;l!==x&&(D(t),O(l),null!=b&&P(b,String(l)))},E=e=>{var t,a;let l=null;switch(e.key){case"ArrowRight":{const a=I.indexOf(e.currentTarget)+1;l=null!=(t=I[a])?t:I[0];break}case"ArrowLeft":{const t=I.indexOf(e.currentTarget)-1;l=null!=(a=I[t])?a:I[I.length-1];break}}null==l||l.focus()};return l.createElement("div",{className:(0,n.Z)("tabs-container",p)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":c},y)},w.map((({value:e,label:t,attributes:a})=>{return l.createElement("li",(r=k({role:"tab",tabIndex:x===e?0:-1,"aria-selected":x===e,key:e,ref:e=>I.push(e),onKeyDown:E,onFocus:C,onClick:C},a),o={className:(0,n.Z)("tabs__item",u,null==a?void 0:a.className,{"tabs__item--active":x===e})},h(r,g(o))),null!=t?t:e);var r,o}))),r?(0,l.cloneElement)(f.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function w(e){const t=(0,r.Z)();return l.createElement(f,k({key:String(t)},e))}},4752:function(e,t,a){a.r(t),a.d(t,{assets:function(){return y},contentTitle:function(){return m},default:function(){return w},frontMatter:function(){return d},metadata:function(){return b},toc:function(){return k}});var l=a(3905),n=a(5332),r=a(4455),o=Object.defineProperty,s=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,h=(e,t,a)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,g=(e,t)=>{for(var a in t||(t={}))u.call(t,a)&&h(e,a,t[a]);if(p)for(var a of p(t))c.call(t,a)&&h(e,a,t[a]);return e};const d={id:"debug",title:"Debugging Tests"},m=void 0,b={unversionedId:"debug",id:"version-stable/debug",title:"Debugging Tests",description:"The Playwright inspector is a great tool to help with debugging. It opens up a browser window highlighting the selectors as you step through each line of the test. You can also use the explore button to find other available selectors which you can then copy into your test file and rerun your tests to see if it passes.",source:"@site/versioned_docs/version-stable/debug.mdx",sourceDirName:".",slug:"/debug",permalink:"/python/docs/debug",draft:!1,tags:[],version:"stable",frontMatter:{id:"debug",title:"Debugging Tests"},sidebar:"docs",previous:{title:"Running Tests",permalink:"/python/docs/running-tests"},next:{title:"Test Generator",permalink:"/python/docs/codegen"}},y={},k=[{value:"Playwright Inspector",id:"playwright-inspector",level:2},{value:"Using PWDEBUG",id:"using-pwdebug",level:3},{value:"Selectors in Developer Tools Console",id:"selectors-in-developer-tools-console",level:4},{value:"Using page.pause",id:"using-pagepause",level:3},{value:"Stepping through the Playwright script",id:"stepping-through-the-playwright-script",level:2},{value:"Browser Developer Tools",id:"browser-developer-tools",level:2},{value:"Debugging Selectors",id:"debugging-selectors",level:2},{value:"playwright.$(selector)",id:"playwrightselector",level:4},{value:"playwright.$$(selector)",id:"playwrightselector-1",level:4},{value:"playwright.inspect(selector)",id:"playwrightinspectselector",level:4},{value:"playwright.locator(selector)",id:"playwrightlocatorselector",level:4},{value:"playwright.selector(element)",id:"playwrightselectorelement",level:4},{value:"Run Tests in headed mode",id:"run-tests-in-headed-mode",level:2},{value:"Verbose API logs",id:"verbose-api-logs",level:2},{value:"What&#39;s Next",id:"whats-next",level:2}],f={toc:k};function w(e){var t,a=e,{components:o}=a,h=((e,t)=>{var a={};for(var l in e)u.call(e,l)&&t.indexOf(l)<0&&(a[l]=e[l]);if(null!=e&&p)for(var l of p(e))t.indexOf(l)<0&&c.call(e,l)&&(a[l]=e[l]);return a})(a,["components"]);return(0,l.kt)("wrapper",(t=g(g({},f),h),s(t,i({components:o,mdxType:"MDXLayout"}))),(0,l.kt)("p",null,"The Playwright inspector is a great tool to help with debugging. It opens up a browser window highlighting the selectors as you step through each line of the test. You can also use the explore button to find other available ",(0,l.kt)("a",g({parentName:"p"},{href:"/python/docs/selectors"}),"selectors")," which you can then copy into your test file and rerun your tests to see if it passes."),(0,l.kt)("h2",g({},{id:"playwright-inspector"}),"Playwright Inspector"),(0,l.kt)("p",null,"Playwright Inspector is a GUI tool that helps authoring and debugging Playwright scripts. That's our default recommended tool for scripts troubleshooting."),(0,l.kt)("img",{width:"712",alt:"Playwright Inspector",src:"https://user-images.githubusercontent.com/883973/108614092-8c478a80-73ac-11eb-9597-67dfce110e00.png"}),(0,l.kt)("p",null,"There are several ways of opening Playwright Inspector:"),(0,l.kt)("h3",g({},{id:"using-pwdebug"}),"Using PWDEBUG"),(0,l.kt)("p",null,"Set the ",(0,l.kt)("inlineCode",{parentName:"p"},"PWDEBUG")," environment variable to run your scripts in debug mode. This configures Playwright for debugging and opens the inspector."),(0,l.kt)(n.Z,{groupId:"bash-flavor",defaultValue:"bash",values:[{label:"Bash",value:"bash"},{label:"PowerShell",value:"powershell"},{label:"Batch",value:"batch"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"bash",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-bash"}),"PWDEBUG=1 pytest -s\n"))),(0,l.kt)(r.Z,{value:"powershell",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-powershell"}),"$env:PWDEBUG=1\npytest -s\n"))),(0,l.kt)(r.Z,{value:"batch",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-batch"}),"set PWDEBUG=1\npytest -s\n")))),(0,l.kt)("p",null,"Additional useful defaults are configured when ",(0,l.kt)("inlineCode",{parentName:"p"},"PWDEBUG=1")," is set:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Browsers launch in the headed mode"),(0,l.kt)("li",{parentName:"ul"},"Default timeout is set to 0 (= no timeout)")),(0,l.kt)("p",null,"Using ",(0,l.kt)("inlineCode",{parentName:"p"},"PWDEBUG=console")," will configure the browser for debugging in Developer tools console:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Runs headed"),": Browsers always launch in headed mode"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Disables timeout"),": Sets default timeout to 0 (= no timeout)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Console helper"),": Configures a ",(0,l.kt)("inlineCode",{parentName:"li"},"playwright")," object in the browser to generate and highlight ",(0,l.kt)("a",g({parentName:"li"},{href:"/python/docs/selectors"}),"Playwright selectors"),". This can be used to verify text or composite selectors.")),(0,l.kt)(n.Z,{groupId:"bash-flavor",defaultValue:"bash",values:[{label:"Bash",value:"bash"},{label:"PowerShell",value:"powershell"},{label:"Batch",value:"batch"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"bash",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-bash"}),"PWDEBUG=console pytest -s\n"))),(0,l.kt)(r.Z,{value:"powershell",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-powershell"}),'$env:PWDEBUG="console"\npytest -s\n'))),(0,l.kt)(r.Z,{value:"batch",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-batch"}),"set PWDEBUG=console\npytest -s\n")))),(0,l.kt)("h4",g({},{id:"selectors-in-developer-tools-console"}),"Selectors in Developer Tools Console"),(0,l.kt)("p",null,"When running in Debug Mode with ",(0,l.kt)("inlineCode",{parentName:"p"},"PWDEBUG=console"),", a ",(0,l.kt)("inlineCode",{parentName:"p"},"playwright")," object is available in Developer tools console."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Run with ",(0,l.kt)("inlineCode",{parentName:"li"},"PWDEBUG=console")),(0,l.kt)("li",{parentName:"ol"},"Setup a breakpoint to pause the execution"),(0,l.kt)("li",{parentName:"ol"},"Open the console panel in browser developer tools"),(0,l.kt)("li",{parentName:"ol"},"Use the ",(0,l.kt)("inlineCode",{parentName:"li"},"playwright")," API",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"playwright.$(selector)"),": Highlight the first occurrence of the selector. This reflects how ",(0,l.kt)("inlineCode",{parentName:"li"},"page.$")," would see the page."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"playwright.$$(selector)"),": Highlight all occurrences of the selector. This reflects how ",(0,l.kt)("inlineCode",{parentName:"li"},"page.$$")," would see the page."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"playwright.inspect(selector)"),": Inspect the selector in the Elements panel."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"playwright.locator(selector)"),": Highlight the first occurrence of the locator."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"playwright.clear()"),": Clear existing highlights."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"playwright.selector(element)"),": Generate a selector that points to the element.")))),(0,l.kt)("a",{href:"https://user-images.githubusercontent.com/284612/86857345-299abc00-c073-11ea-9e31-02923a9f0d4b.png"},(0,l.kt)("img",{src:"https://user-images.githubusercontent.com/284612/86857345-299abc00-c073-11ea-9e31-02923a9f0d4b.png",width:"500",alt:"Highlight selectors"})),(0,l.kt)("h3",g({},{id:"using-pagepause"}),"Using page.pause"),(0,l.kt)("p",null,"Call ",(0,l.kt)("a",g({parentName:"p"},{href:"/python/docs/api/class-page#page-pause"}),"page.pause()")," method from your script when running in headed browser."),(0,l.kt)(n.Z,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"sync",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-py"}),"# Pause on the following line.\npage.pause()\n"))),(0,l.kt)(r.Z,{value:"async",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-py"}),"# Pause on the following line.\nawait page.pause()\n")))),"- Use `open` or `codegen` commands in the Playwright [CLI](/python/docs/cli):",(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-bash"}),"playwright codegen wikipedia.org\n")),(0,l.kt)("h2",g({},{id:"stepping-through-the-playwright-script"}),"Stepping through the Playwright script"),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"PWDEBUG=1")," is set, Playwright Inspector window will be opened and the script will be paused on the first Playwright statement:"),(0,l.kt)("img",{width:"557",alt:"Paused on line",src:"https://user-images.githubusercontent.com/883973/108614337-71761580-73ae-11eb-9f61-3d29c52c9520.png"}),(0,l.kt)("p",null,"Now we know what action is about to be performed and we can look into the details on that action. For example, when stopped on an input action such as ",(0,l.kt)("inlineCode",{parentName:"p"},"click"),", the exact point Playwright is about to click is highlighted with the large red dot on the inspected page:"),(0,l.kt)("img",{width:"344",alt:"Red dot on inspected page",src:"https://user-images.githubusercontent.com/883973/108614363-b69a4780-73ae-11eb-8f5e-51f9c91ec9b4.png"}),(0,l.kt)("p",null,"By the time Playwright has paused on that click action, it has already performed actionability checks that can be found in the log:"),(0,l.kt)("img",{width:"712",alt:"Action log",src:"https://user-images.githubusercontent.com/883973/108614564-72a84200-73b0-11eb-9de2-828b28d78b36.png"}),(0,l.kt)("p",null,"If actionability can't be reached, it'll show action as pending:"),(0,l.kt)("img",{width:"712",alt:"Pending action",src:"https://user-images.githubusercontent.com/883973/108614840-e6e3e500-73b2-11eb-998f-0cf31b2aa9a2.png"}),(0,l.kt)("p",null,'You can step over each action using the "Step over" action (keyboard shortcut: ',(0,l.kt)("inlineCode",{parentName:"p"},"F10"),") or resume script without further pauses (",(0,l.kt)("inlineCode",{parentName:"p"},"F8"),"):"),(0,l.kt)("center",null,(0,l.kt)("img",{width:"98",alt:"Stepping toolbar",src:"https://user-images.githubusercontent.com/883973/108614389-f9f4b600-73ae-11eb-8df2-8d9ce9da5d5c.png"})),(0,l.kt)("h2",g({},{id:"browser-developer-tools"}),"Browser Developer Tools"),(0,l.kt)("p",null,"You can use browser developer tools in Chromium, Firefox and WebKit while running a Playwright script in headed mode. Developer tools help to:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Inspect the DOM tree and ",(0,l.kt)("strong",{parentName:"li"},"find element selectors")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"See console logs")," during execution (or learn how to ",(0,l.kt)("a",g({parentName:"li"},{href:"/python/docs/api/class-page#page-event-console"}),"read logs via API"),")"),(0,l.kt)("li",{parentName:"ul"},"Check ",(0,l.kt)("strong",{parentName:"li"},"network activity")," and other developer tools features")),(0,l.kt)("a",{href:"https://user-images.githubusercontent.com/284612/77234134-5f21a500-6b69-11ea-92ec-1c146e1333ec.png"},(0,l.kt)("img",{src:"https://user-images.githubusercontent.com/284612/77234134-5f21a500-6b69-11ea-92ec-1c146e1333ec.png",width:"500",alt:"Chromium Developer Tools"})),(0,l.kt)("p",null,"Using a ",(0,l.kt)("a",g({parentName:"p"},{href:"/python/docs/api/class-page#page-pause"}),"page.pause()")," method is an easy way to pause the Playwright script execution and inspect the page in Developer tools. It will also open ",(0,l.kt)("a",g({parentName:"p"},{href:"/python/docs/inspector"}),"Playwright Inspector")," to help with debugging."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"For Chromium"),": you can also open developer tools through a launch option."),(0,l.kt)(n.Z,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"sync",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-py"}),"chromium.launch(devtools=True)\n"))),(0,l.kt)(r.Z,{value:"async",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-py"}),"await chromium.launch(devtools=True)\n")))),(0,l.kt)("admonition",g({},{type:"note"}),(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("strong",{parentName:"p"},"For WebKit"),": launching WebKit Inspector during the execution will   prevent the Playwright script from executing any further.")),(0,l.kt)("h2",g({},{id:"debugging-selectors"}),"Debugging Selectors"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Click the Explore button to hover over elements in the screen and click them to automatically generate selectors for those elements."),(0,l.kt)("li",{parentName:"ul"},"To verify where selector points, paste it into the inspector input field:")),(0,l.kt)("img",{width:"602",alt:"Selectors toolbar",src:"https://user-images.githubusercontent.com/883973/108614696-ad5eaa00-73b1-11eb-81f5-9eebe62543a2.png"}),(0,l.kt)("p",null,"You can also use the following API inside the Developer Tools Console of any browser."),(0,l.kt)("img",{src:"https://user-images.githubusercontent.com/284612/92536317-37dd9380-f1ee-11ea-875d-daf1b206dd56.png"}),(0,l.kt)("h4",g({},{id:"playwrightselector"}),"playwright.$(selector)"),(0,l.kt)("p",null,"Query Playwright selector, using the actual Playwright query engine, for example:"),(0,l.kt)("h4",g({},{id:"playwrightselector-1"}),"playwright.$$(selector)"),(0,l.kt)("p",null,"Same as ",(0,l.kt)("inlineCode",{parentName:"p"},"playwright.$"),", but returns all matching elements."),(0,l.kt)("h4",g({},{id:"playwrightinspectselector"}),"playwright.inspect(selector)"),(0,l.kt)("p",null,"Reveal element in the Elements panel (if DevTools of the respective browser supports it)."),(0,l.kt)("h4",g({},{id:"playwrightlocatorselector"}),"playwright.locator(selector)"),(0,l.kt)("p",null,"Query Playwright element using the actual Playwright query engine, for example:"),(0,l.kt)("h4",g({},{id:"playwrightselectorelement"}),"playwright.selector(element)"),(0,l.kt)("p",null,"Generates selector for the given element."),(0,l.kt)("h2",g({},{id:"run-tests-in-headed-mode"}),"Run Tests in headed mode"),(0,l.kt)("p",null,"Playwright runs browsers in headless mode by default. To change this behavior, use ",(0,l.kt)("inlineCode",{parentName:"p"},"headless: false")," as a launch option. You can also use the ",(0,l.kt)("inlineCode",{parentName:"p"},"slow_mo")," option to slow down execution and follow along while debugging."),(0,l.kt)(n.Z,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"sync",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-py"}),"chromium.launch(headless=False, slow_mo=100) # or firefox, webkit\n\n"))),(0,l.kt)(r.Z,{value:"async",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-py"}),"await chromium.launch(headless=False, slow_mo=100) # or firefox, webkit\n\n")))),(0,l.kt)("h2",g({},{id:"verbose-api-logs"}),"Verbose API logs"),(0,l.kt)("p",null,"Playwright supports verbose logging with the ",(0,l.kt)("inlineCode",{parentName:"p"},"DEBUG")," environment variable."),(0,l.kt)(n.Z,{groupId:"bash-flavor",defaultValue:"bash",values:[{label:"Bash",value:"bash"},{label:"PowerShell",value:"powershell"},{label:"Batch",value:"batch"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"bash",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-bash"}),"DEBUG=pw:api pytest -s\n"))),(0,l.kt)(r.Z,{value:"powershell",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-powershell"}),'$env:DEBUG="pw:api"\npytest -s\n'))),(0,l.kt)(r.Z,{value:"batch",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",g({parentName:"pre"},{className:"language-batch"}),"set DEBUG=pw:api\npytest -s\n")))),(0,l.kt)("h2",g({},{id:"whats-next"}),"What's Next"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",g({parentName:"li"},{href:"/python/docs/codegen"}),"Generate tests with Codegen")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",g({parentName:"li"},{href:"/python/docs/trace-viewer"}),"See a trace of your tests"))))}w.isMDXComponent=!0}}]);