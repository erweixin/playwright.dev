"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[7085],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4455:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(7294),o=t(6010),a="tabItem_Ymn6",i=Object.defineProperty,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,n,t)=>n in e?i(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t;function u({children:e,hidden:n,className:t}){return r.createElement("div",((e,n)=>{for(var t in n||(n={}))l.call(n,t)&&p(e,t,n[t]);if(s)for(var t of s(n))c.call(n,t)&&p(e,t,n[t]);return e})({role:"tabpanel",className:(0,o.Z)(a,t)},{hidden:n}),e)}},5332:function(e,n,t){t.d(n,{Z:function(){return v}});var r=t(7294),o=t(6010),a=t(4939),i=t(2174),s=t(2107),l=t(8757),c="tabList__CuJ",p="tabItem_LNqP",u=Object.defineProperty,d=Object.defineProperties,m=Object.getOwnPropertyDescriptors,f=Object.getOwnPropertySymbols,y=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable,g=(e,n,t)=>n in e?u(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,b=(e,n)=>{for(var t in n||(n={}))y.call(n,t)&&g(e,t,n[t]);if(f)for(var t of f(n))h.call(n,t)&&g(e,t,n[t]);return e};function x(e){var n,t;const{lazy:a,block:u,defaultValue:f,values:y,groupId:h,className:g}=e,x=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=null!=y?y:x.map((({props:{value:e,label:n,attributes:t}})=>({value:e,label:n,attributes:t}))),_=(0,i.l)(v,((e,n)=>e.value===n.value));if(_.length>0)throw new Error(`Docusaurus error: Duplicate values "${_.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const w=null===f?f:null!=(t=null!=f?f:null==(n=x.find((e=>e.props.default)))?void 0:n.props.value)?t:x[0].props.value;if(null!==w&&!v.some((e=>e.value===w)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${w}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:O}=(0,s.U)(),[j,P]=(0,r.useState)(w),N=[],{blockElementScrollPositionUntilNextRender:E}=(0,l.o5)();if(null!=h){const e=k[h];null!=e&&e!==j&&v.some((n=>n.value===e))&&P(e)}const T=e=>{const n=e.currentTarget,t=N.indexOf(n),r=v[t].value;r!==j&&(E(n),P(r),null!=h&&O(h,String(r)))},C=e=>{var n,t;let r=null;switch(e.key){case"ArrowRight":{const t=N.indexOf(e.currentTarget)+1;r=null!=(n=N[t])?n:N[0];break}case"ArrowLeft":{const n=N.indexOf(e.currentTarget)-1;r=null!=(t=N[n])?t:N[N.length-1];break}}null==r||r.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":u},g)},v.map((({value:e,label:n,attributes:t})=>{return r.createElement("li",(a=b({role:"tab",tabIndex:j===e?0:-1,"aria-selected":j===e,key:e,ref:e=>N.push(e),onKeyDown:C,onFocus:T,onClick:T},t),i={className:(0,o.Z)("tabs__item",p,null==t?void 0:t.className,{"tabs__item--active":j===e})},d(a,m(i))),null!=n?n:e);var a,i}))),a?(0,r.cloneElement)(x.filter((e=>e.props.value===j))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},x.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==j})))))}function v(e){const n=(0,a.Z)();return r.createElement(x,b({key:String(n)},e))}},327:function(e,n,t){t.r(n),t.d(n,{assets:function(){return g},contentTitle:function(){return y},default:function(){return v},frontMatter:function(){return f},metadata:function(){return h},toc:function(){return b}});var r=t(3905),o=t(5332),a=t(4455),i=Object.defineProperty,s=Object.defineProperties,l=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,d=(e,n,t)=>n in e?i(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,m=(e,n)=>{for(var t in n||(n={}))p.call(n,t)&&d(e,t,n[t]);if(c)for(var t of c(n))u.call(n,t)&&d(e,t,n[t]);return e};const f={id:"chrome-extensions",title:"Chrome Extensions"},y=void 0,h={unversionedId:"chrome-extensions",id:"chrome-extensions",title:"Chrome Extensions",description:"Extensions only work in Chrome / Chromium in non-headless mode, launched with a persistent context.",source:"@site/docs/chrome-extensions.mdx",sourceDirName:".",slug:"/chrome-extensions",permalink:"/python/docs/next/chrome-extensions",draft:!1,tags:[],version:"current",frontMatter:{id:"chrome-extensions",title:"Chrome Extensions"},sidebar:"docs",previous:{title:"Browser Contexts",permalink:"/python/docs/next/browser-contexts"},next:{title:"Command line tools",permalink:"/python/docs/next/cli"}},g={},b=[{value:"Testing",id:"testing",level:2}],x={toc:b};function v(e){var n,t=e,{components:i}=t,d=((e,n)=>{var t={};for(var r in e)p.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&c)for(var r of c(e))n.indexOf(r)<0&&u.call(e,r)&&(t[r]=e[r]);return t})(t,["components"]);return(0,r.kt)("wrapper",(n=m(m({},x),d),s(n,l({components:i,mdxType:"MDXLayout"}))),(0,r.kt)("admonition",m({},{type:"note"}),(0,r.kt)("p",{parentName:"admonition"},"Extensions only work in Chrome / Chromium in non-headless mode, launched with a persistent context.")),(0,r.kt)("p",null,"The following is code for getting a handle to the ",(0,r.kt)("a",m({parentName:"p"},{href:"https://developer.chrome.com/extensions/background_pages"}),"background page")," of a ",(0,r.kt)("a",m({parentName:"p"},{href:"https://developer.chrome.com/docs/extensions/mv2/"}),"Manifest v2")," extension whose source is located in ",(0,r.kt)("inlineCode",{parentName:"p"},"./my-extension"),":"),(0,r.kt)(o.Z,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],mdxType:"Tabs"},(0,r.kt)(a.Z,{value:"sync",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-py"}),'from playwright.sync_api import sync_playwright\n\npath_to_extension = "./my-extension"\nuser_data_dir = "/tmp/test-user-data-dir"\n\n\ndef run(playwright):\n    context = playwright.chromium.launch_persistent_context(\n        user_data_dir,\n        headless=False,\n        args=[\n            f"--disable-extensions-except={path_to_extension}",\n            f"--load-extension={path_to_extension}",\n        ],\n    )\n    if len(context.background_pages) == 0:\n        background_page = context.wait_for_event(\'backgroundpage\')\n    else:\n        background_page = context.background_pages[0]\n\n    # Test the background page as you would any other page.\n    context.close()\n\n\nwith sync_playwright() as playwright:\n    run(playwright)\n'))),(0,r.kt)(a.Z,{value:"async",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-py"}),'import asyncio\nfrom playwright.async_api import async_playwright\n\npath_to_extension = "./my-extension"\nuser_data_dir = "/tmp/test-user-data-dir"\n\n\nasync def run(playwright):\n    context = await playwright.chromium.launch_persistent_context(\n        user_data_dir,\n        headless=False,\n        args=[\n            f"--disable-extensions-except={path_to_extension}",\n            f"--load-extension={path_to_extension}",\n        ],\n    )\n\n    if len(context.background_pages) == 0:\n        background_page = await context.wait_for_event(\'backgroundpage\')\n    else:\n        background_page = context.background_pages[0]\n\n    # Test the background page as you would any other page.\n    await context.close()\n\n\nasync def main():\n    async with async_playwright() as playwright:\n        await run(playwright)\n\n\nasyncio.run(main())\n')))),(0,r.kt)("h2",m({},{id:"testing"}),"Testing"),(0,r.kt)("p",null,"To have the extension loaded when running tests you can use a test fixture to set the context. You can also dynamically retrieve the extension id and use it that to load and test the popup page for example."),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-py"}),'# conftest.py\nfrom typing import Generator\nfrom pathlib import Path\nfrom playwright.sync_api import Playwright, BrowserContext\nimport pytest\n\n\n@pytest.fixture()\ndef context(playwright: Playwright) -> Generator[BrowserContext, None, None]:\n    path_to_extension = Path(__file__).parent.joinpath("my-extension")\n    context = playwright.chromium.launch_persistent_context(\n        "",\n        headless=False,\n        args=[\n            f"--disable-extensions-except={path_to_extension}",\n            f"--load-extension={path_to_extension}",\n        ],\n    )\n    yield context\n    context.close()\n\n\n@pytest.fixture()\ndef extension_id(context) -> Generator[str, None, None]:\n    # for manifest v2:\n    # background = context.background_pages[0]\n    # if not background:\n    #     background = context.wait_for_event("backgroundpage")\n\n    # for manifest v3:\n    background = context.service_workers[0]\n    if not background:\n        background = context.wait_for_event("serviceworker")\n\n    extension_id = background.url.split("/")[2]\n    yield extension_id\n\n')),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-py"}),'# test_foo.py\nfrom playwright.sync_api import expect, Page\n\n\ndef test_example_test(page: Page) -> None:\n    page.goto("https://example.com")\n    expect(page.locator("body")).to_contain_text("Changed by my-extension")\n\n\ndef test_popup_page(page: Page, extension_id: str) -> None:\n    page.goto(f"chrome-extension://{extension_id}/popup.html")\n    expect(page.locator("body")).to_have_text("my-extension popup")\n')))}v.isMDXComponent=!0}}]);